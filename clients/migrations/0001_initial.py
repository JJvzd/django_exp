# Generated by Django 2.1.7 on 2019-10-09 06:32

from django.db import migrations, models
import django.db.models.deletion
import utils.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AgentDepartament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='AgentDepartamentUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AgentDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'документ агента',
                'verbose_name_plural': 'документы агента',
            },
        ),
        migrations.CreateModel(
            name='AgentDocumentCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('active', models.BooleanField(default=True, verbose_name='Активный')),
                ('for_individual_entrepreneur', models.BooleanField(default=False, verbose_name='Для индивидуальных предпринимателей')),
                ('for_physical_person', models.BooleanField(default=False, verbose_name='Для физических лиц')),
                ('for_organization', models.BooleanField(default=False, verbose_name='Для юридических лиц')),
                ('auto_generate', models.BooleanField(default=False, verbose_name='Автосоздаваемый документ')),
                ('type', models.CharField(max_length=20, unique=True, verbose_name='Уникальный код')),
                ('order', models.PositiveIntegerField(default=9999, help_text='По возрастанию', verbose_name='Порядок сортировки')),
                ('help_text', models.TextField(verbose_name='Всплывающая подсказка')),
            ],
            options={
                'verbose_name': 'категория документа агента',
                'verbose_name_plural': 'категории документов агентов',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AgentManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AgentProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience', models.CharField(blank=True, max_length=15, null=True, verbose_name='Опыт работы агентом')),
                ('priority_conditions', models.TextField(null=True, verbose_name='Какие условия считаете приоритетными в работе')),
                ('about_us', models.CharField(max_length=300, null=True, verbose_name='Из каких источников узнали о нас')),
            ],
        ),
        migrations.CreateModel(
            name='AgentVerification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('in_process', 'В процессе'), ('success', 'Верификация пройдена'), ('fail', 'Верификация не пройдена')], default='in_process', max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AgentVerificationComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BankPackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('conditionals', models.TextField(default='{}')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BankSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.PositiveIntegerField(default=1)),
                ('enable', models.BooleanField(default=False)),
                ('amount_limit', models.FloatField(default=0)),
                ('scoring_enable', models.BooleanField(default=True)),
                ('scoring_settings', models.TextField(default='{}')),
                ('allow_request_only_with_ecp', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BankStopInn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, null=True)),
                ('inn', models.CharField(max_length=15, null=True)),
                ('kpp', models.CharField(max_length=15, null=True)),
                ('ogrn', models.CharField(max_length=15, null=True)),
                ('okpto', models.CharField(blank=True, max_length=20, null=True)),
                ('need_sign_regulations', models.BooleanField(default=True, verbose_name='Необходимость подписи регламента перед первым входом.')),
                ('full_name', models.CharField(blank=True, max_length=100, null=True)),
                ('short_name', models.CharField(blank=True, max_length=50, null=True)),
                ('active', models.BooleanField(default=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('legal_address_index', models.CharField(blank=True, max_length=6, null=True, validators=[utils.validators.validate_number], verbose_name='Индекс')),
                ('legal_address_city', models.CharField(blank=True, max_length=20, null=True, verbose_name='Город')),
                ('legal_address_street', models.CharField(blank=True, max_length=200, null=True, verbose_name='Улица, проспект')),
            ],
        ),
        migrations.CreateModel(
            name='HowClients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='InternalNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('text', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('published', 'Опубликовано'), ('archive', 'В архиве')], default='draft', max_length=20)),
                ('for_agents', models.BooleanField(default=False)),
                ('for_clients', models.BooleanField(default=False)),
                ('for_banks', models.BooleanField(default=False)),
                ('for_mfo', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MFOBlackList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inn', models.CharField(max_length=15)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MFOPackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('conditionals', models.TextField(default='{}')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MFOSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.PositiveIntegerField(default=1)),
                ('enable', models.BooleanField(default=False)),
                ('amount_limit', models.FloatField(default=0)),
                ('scoring_enable', models.BooleanField(default=True)),
                ('scoring_settings', models.TextField(default='{}')),
                ('allow_request_only_with_ecp', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenderHelpAgentComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Текст комментария')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'TenderHelpAgentComment',
                'verbose_name_plural': 'TenderHelpAgentComment',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('company_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clients.Company')),
                ('document_number', models.CharField(blank=True, max_length=20, null=True)),
                ('document_date', models.DateField(blank=True, null=True)),
                ('document_name', models.CharField(blank=True, max_length=200, null=True)),
                ('confirmed', models.BooleanField(default=False)),
                ('taxation_type', models.CharField(blank=True, choices=[('OSN', 'ОСН'), ('USN', 'УСН'), ('ENVD', 'ЕНВД'), ('PSN', 'ПСН'), ('ESHN', 'ЕСХН')], max_length=10, null=True, verbose_name='Режим налогообложения')),
                ('bank_account_bik', models.CharField(blank=True, max_length=10, null=True, validators=[utils.validators.validate_number])),
                ('bank_account_bank', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_account_checking_account', models.CharField(blank=True, max_length=30, null=True, validators=[utils.validators.validate_number])),
                ('bank_account_correspondent_account', models.CharField(blank=True, max_length=30, null=True, validators=[utils.validators.validate_number])),
                ('bank_account_address', models.CharField(blank=True, max_length=255, null=True)),
                ('fact_address_index', models.CharField(blank=True, max_length=6, null=True, validators=[utils.validators.validate_number], verbose_name='Индекс')),
                ('fact_address_city', models.CharField(blank=True, max_length=20, null=True, verbose_name='Город')),
                ('fact_address_street', models.CharField(blank=True, max_length=200, null=True, verbose_name='Улица, проспект')),
                ('equal_fact_and_legal_address', models.BooleanField(default=True)),
                ('position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Должность')),
                ('document_for_position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Почтовый адрес отличается от юридического')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Фамилия')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('email', models.CharField(blank=True, max_length=50, null=True, verbose_name='E-mail')),
                ('series', models.CharField(blank=True, max_length=15, null=True, verbose_name='Серия')),
                ('number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Номер')),
                ('issued_by', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Кем выдан')),
                ('when_issued', models.DateField(blank=True, null=True, verbose_name='Когда выдан')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('place_of_birth', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Место рождения')),
                ('issued_code', models.CharField(blank=True, max_length=15, null=True, verbose_name='Код подразделения')),
                ('internal_news', models.PositiveIntegerField(default=0)),
                ('work_rules', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'агент',
                'verbose_name_plural': 'агенты',
            },
            bases=('clients.company',),
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('company_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clients.Company')),
                ('code', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'банк',
                'verbose_name_plural': 'банки',
            },
            bases=('clients.company',),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('company_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clients.Company')),
                ('date_last_action', models.DateField(blank=True, null=True, verbose_name='Дата последнего действия')),
                ('winner_notification', models.BooleanField(default=True, verbose_name='Уведомления о победе')),
            ],
            options={
                'verbose_name': 'клиент',
                'verbose_name_plural': 'клиенты',
            },
            bases=('clients.company',),
        ),
        migrations.CreateModel(
            name='MFO',
            fields=[
                ('company_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clients.Company')),
                ('code', models.CharField(choices=[('rus_micro_finance', 'rus_micro_finance'), ('simple_finance', 'simple_finance')], max_length=20)),
            ],
            options={
                'verbose_name': 'МФО',
                'verbose_name_plural': 'МФО',
            },
            bases=('clients.company',),
        ),
    ]
