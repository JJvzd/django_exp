# Generated by Django 2.1.7 on 2019-10-09 06:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('files', '0001_initial'),
        ('cabinet', '0003_signhistory_user'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('base_request', '0002_requesttender_placement'),
        ('clients', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='tenderhelpagentcomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='mfopackage',
            name='document_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base_request.BankDocumentType'),
        ),
        migrations.AddField(
            model_name='bankpackage',
            name='document_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base_request.BankDocumentType'),
        ),
        migrations.AddField(
            model_name='agentverificationcomment',
            name='verification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.AgentVerification'),
        ),
        migrations.AddField(
            model_name='agentprofile',
            name='how_clients',
            field=models.ManyToManyField(null=True, to='clients.HowClients', verbose_name='С какими клиентами работаете'),
        ),
        migrations.AddField(
            model_name='agentmanager',
            name='manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='agentdocument',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='clients.AgentDocumentCategory'),
        ),
        migrations.AddField(
            model_name='agentdocument',
            name='certificate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cabinet.Certificate'),
        ),
        migrations.AddField(
            model_name='agentdocument',
            name='file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='files.BaseFile'),
        ),
        migrations.AddField(
            model_name='agentdepartamentuser',
            name='departament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.AgentDepartament'),
        ),
        migrations.AddField(
            model_name='agentdepartamentuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='mfosettings',
            name='credit_organization',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='settings', to='clients.MFO'),
        ),
        migrations.AddField(
            model_name='mfopackage',
            name='credit_organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package', to='clients.MFO'),
        ),
        migrations.AddField(
            model_name='mfoblacklist',
            name='credit_organization',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='black_list', to='clients.MFO'),
        ),
        migrations.AddField(
            model_name='client',
            name='agent_company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='clients.Agent'),
        ),
        migrations.AddField(
            model_name='client',
            name='agent_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_clients', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bankstopinn',
            name='credit_organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='black_list', to='clients.Bank'),
        ),
        migrations.AddField(
            model_name='banksettings',
            name='credit_organization',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='clients.Bank'),
        ),
        migrations.AddField(
            model_name='bankpackage',
            name='credit_organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package', to='clients.Bank'),
        ),
        migrations.AddField(
            model_name='agentverification',
            name='agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.Agent'),
        ),
        migrations.AddField(
            model_name='agentprofile',
            name='agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clients.Agent'),
        ),
        migrations.AddField(
            model_name='agentmanager',
            name='agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.Agent', unique=True),
        ),
        migrations.AddField(
            model_name='agentdocument',
            name='agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.Agent'),
        ),
        migrations.AddField(
            model_name='agentdepartament',
            name='agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.Agent'),
        ),
        migrations.AlterUniqueTogether(
            name='agentmanager',
            unique_together={('manager', 'agent')},
        ),
    ]
