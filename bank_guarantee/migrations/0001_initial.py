# Generated by Django 2.1.7 on 2019-10-09 06:32

import common.mixins
from django.db import migrations, models

import common.mixins.model_diff
import utils.db


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BankOfferDocumentCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ClientDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Discuss',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_unread', models.BooleanField(default=False)),
                ('agent_unread', models.BooleanField(default=False)),
                ('bank_unread', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExternalRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('external_id', models.CharField(blank=True, max_length=40, null=True)),
                ('other_data', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('agent_read', models.BooleanField(default=False)),
                ('bank_read', models.BooleanField(default=False)),
                ('client_read', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MessageFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sign', models.TextField(blank=True, null=True, verbose_name='Подпись файла')),
                ('sign_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата подписи')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=16, verbose_name='Сумма БГ')),
                ('offer_active_end_date', models.DateField(blank=True, null=True, verbose_name='Срок действия предложения')),
                ('currency', models.CharField(choices=[('rub', 'Рубль'), ('usd', 'Доллар')], default='rub', max_length=300, verbose_name='Валюта кредита / обязательства')),
                ('contract_date_end', models.DateField(blank=True, null=True, verbose_name='Срок действия БГ')),
                ('contract_number', models.CharField(blank=True, max_length=250, null=True, verbose_name='№ договора между Принципалом и Клиентом')),
                ('contract_date', models.DateField(blank=True, null=True, verbose_name='Дата договора')),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=16, verbose_name='Коммиссия')),
                ('default_commission', models.DecimalField(decimal_places=2, default=0, max_digits=16, verbose_name='Стандартная комиссия')),
                ('delta_commission', models.DecimalField(decimal_places=2, default=0, max_digits=16, verbose_name='Превышение/Понижение комиссии')),
                ('commission_bank', models.DecimalField(decimal_places=2, default=0, max_digits=16, verbose_name='Коммиссия')),
                ('default_commission_bank', models.DecimalField(decimal_places=2, default=0, max_digits=16, verbose_name='Стандартная комиссия')),
                ('delta_commission_bank', models.DecimalField(decimal_places=2, default=0, max_digits=16, verbose_name='Превышение/Понижение комиссии')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Время последнего изменения объекта')),
                ('is_signed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Предложение заявки',
                'verbose_name_plural': 'Предложения заявок',
                'ordering': ['-id'],
            },
            bases=(common.mixins.model_diff.ModelDiffMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OfferDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_sign', models.TextField()),
                ('client_sign_date', models.DateTimeField(blank=True, null=True)),
                ('bank_sign', models.TextField()),
                ('bank_sign_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OfferDocumentCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('required', models.BooleanField(default=True)),
                ('need_sign', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField()),
                ('active', models.BooleanField(default=True)),
                ('step', models.PositiveIntegerField(choices=[(1, 'Первый этап'), (2, 'Первый этап')])),
            ],
        ),
        migrations.CreateModel(
            name='OfferPrintForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('filename', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'печатная форма предложения',
                'verbose_name_plural': 'печатные формы предложений',
            },
        ),
        migrations.CreateModel(
            name='OfferTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('filename', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OfferTemplateDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='Отображаемый номер заявки')),
                ('request_number_in_bank', models.CharField(blank=True, max_length=20, null=True, verbose_name='№ Заявки в банке')),
                ('required_amount', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Требуемая сумма')),
                ('currency', models.CharField(choices=[('rub', 'Рубль'), ('usd', 'Доллар')], default='rub', max_length=10, verbose_name='Валюта кредита / обязательства')),
                ('prepayment', models.BooleanField(default=False, verbose_name='Предоплата')),
                ('package_class', models.CharField(choices=[('ankor', 'ankor'), ('msb', 'msb'), ('rib', 'rib'), ('sgb', 'sgb'), ('baikal', 'baikal'), ('metall_invest', 'metall_invest'), ('rtbk', 'rtbk'), ('voronej', 'voronej'), ('east', 'east'), ('rus_nar_bank', 'rus_nar_bank'), ('qiwi_bank', 'qiwi_bank'), ('rus_micro_finance', 'rus_micro_finance'), ('gaz_trans_bank', 'gaz_trans_bank'), ('simple_finance', 'simple_finance'), ('zenit', 'zenit'), ('inbank', 'inbank'), ('inter_prom_bank', 'inter_prom_bank'), ('ros_euro_bank', 'ros_euro_bank'), ('mspbank', 'mspbank'), ('prom_svyaz_bank', 'prom_svyaz_bank'), ('tinkoff_bank', 'tinkoff_bank'), ('bks_bank', 'bks_bank'), ('moscombank', 'moscombank'), ('open_bank', 'open_bank')], max_length=255, verbose_name='Код банка, для которого собран пакет')),
                ('package_categories', models.CharField(max_length=150, verbose_name='Требуемые документы')),
                ('scoring_reject_reason', models.CharField(blank=True, max_length=500, null=True, verbose_name='Причина провала скоринга')),
                ('last_comment', models.CharField(blank=True, max_length=250, null=True, verbose_name='Последний комментарий')),
                ('in_archive', models.BooleanField(default=False, verbose_name='Архив')),
                ('questionnaire_was_updated', models.BooleanField(default=False, verbose_name='Нужно ли пересохранение заявки из-за сохранения анкеты')),
                ('bo_was_updated', models.BooleanField(default=False, verbose_name='Нужно ли пересохранение заявки из-за сохранения анкеты')),
                ('need_client', models.BooleanField(default=False, verbose_name='Требуются действия клиента')),
                ('need_agent', models.BooleanField(default=False, verbose_name='Требуются действия агента')),
                ('is_signed', models.BooleanField(blank=True, null=True, verbose_name='Подписана ли заявка')),
                ('status_changed_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата изменения статуса')),
                ('sent_to_bank_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата отправки заявки в банк')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Время последнего изменения объекта')),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Предварительная комиссия')),
                ('delivery_method', models.PositiveIntegerField(blank=True, choices=[(1, 'Почта России'), (2, 'Самовывоз'), (3, 'Курьерская служба')], null=True, verbose_name='Способ доставки')),
                ('delivery_address', models.CharField(blank=True, max_length=300, null=True, verbose_name='Адресс доставки')),
                ('delivery_fio', models.CharField(blank=True, max_length=100, null=True, verbose_name='ФИО получателя')),
                ('delivery_phone', models.CharField(blank=True, max_length=16, null=True, verbose_name='Телефон получателя')),

                ('have_additional_requirement', models.BooleanField(default=False, verbose_name='Требования к БГ')),
                ('additional_requirement', models.BooleanField(default=False, verbose_name='Требования к БГ')),
                ('suggested_price_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Предложенная вами цена контракта в рублях')),
                ('suggested_price_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Предложенная вами цена контракта в процентнах')),
                ('procuring_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True, verbose_name='Размер обеспечения исполнения контракта, руб.')),
                ('prepaid_expense_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True, verbose_name='Размер аванса')),
                ('downpay', models.BooleanField(default=False, verbose_name='Наличие бесспорного списания')),
                ('term_of_work_to', models.DateField(blank=True, null=True, verbose_name='Срок выполнения работ/услуг')),
                ('term_of_work_from', models.DateField(blank=True, null=True, verbose_name='Срок выполнения работ/услуг')),
                ('final_date', models.DateField(blank=True, null=True, verbose_name='Крайний срок выдачи')),
                ('contract_type', models.CharField(blank=True, choices=[('state', 'Государственный'), ('municipal', 'Муниципальный'), ('commercial', 'Коммерческий')], max_length=20, null=True, verbose_name='Контракт государственный или муниципальный')),
                ('placement_way', models.CharField(blank=True, choices=[('competition', 'Конкурс'), ('auction', 'Аукцион'), ('electronic_auction', 'Аукцион в электронной форме'), ('closed_bidding', 'Закрытые торги (закупки)'), ('other', 'Иное')], max_length=20, null=True, verbose_name='Способ размещения государственного (муниципального) заказа')),
                ('placement_way_other', models.CharField(blank=True, max_length=1000, null=True)),
                ('protocol_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер')),
                ('protocol_date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('protocol_lot_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='№ лота')),
                ('protocol_territory', models.TextField(blank=True, null=True, verbose_name='Территория производства работ / выполнения услуг по контракту')),
                ('warranty_from', models.DateField(blank=True, null=True, verbose_name='Гарантийные обязательства c')),
                ('warranty_to', models.DateField(blank=True, null=True, verbose_name='Гарантийные обязательства по')),
                ('interval_from', models.DateField(blank=True, null=True, verbose_name='Срок банковской гарантии c')),
                ('interval_to', models.DateField(blank=True, null=True, verbose_name='Срок банковской гарантии до')),
                ('interval', models.IntegerField(blank=True, null=True, verbose_name='Срок банковской гарантии (в днях)')),
                ('banks_commissions', models.TextField(blank=True, null=True)),
                ('is_big_deal', models.BooleanField(default=False, verbose_name='Являлась ли сделка большой')),
                ('agree', models.BooleanField(default=False, verbose_name='Согласие на обработку личных данных')),
                ('need_bank', models.BooleanField(default=False, verbose_name='Требуются действия банка')),
                ('power_of_attorney', models.BooleanField(default=False, verbose_name='Заполненно по доверенности')),
                ('experience_general_contractor', models.BooleanField(default=False, verbose_name='Есть исполненные государственные контракты в качествегенподрядчика в рамках законов№ 94-ФЗ, 44-ФЗ, 223-ФЗ или 185-ФЗ')),
                ('bank_reject_reason', models.CharField(blank=True, choices=[(1, 'Закреплен за другим агентом')], max_length=300, null=True, verbose_name='Причина отклонения заявки банком')),
                ('targets', utils.db.MultipleSelectField(choices=[('execution', 'На исполнение'), ('participant', 'На участие'), ('avans_return', 'Возврат аванса'), ('warranty', 'Гарантийные обязательства')], default=[], max_length=200, verbose_name='Цели')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
            },
            bases=(common.mixins.model_diff.ModelDiffMixin, models.Model),
        ),
        migrations.CreateModel(
            name='RequestDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sign', models.TextField()),
                ('sign_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RequestHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=1000)),
                ('comment', models.CharField(max_length=500)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RequestPrintForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('download_name', models.CharField(max_length=300)),
                ('type', models.CharField(choices=[('', ''), ('BG', 'bank_guarantee'), ('LOAN', 'loan_request')], default='', max_length=20)),
                ('filename', models.CharField(blank=True, max_length=30, null=True, verbose_name='Шаблон формы, если есть')),
                ('active', models.BooleanField(default=True)),
                ('in_conclusions', models.BooleanField(default=True, verbose_name='Отображать в разделе заключений')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RequestStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя')),
                ('code', models.CharField(blank=True, max_length=30, null=True, verbose_name='Код')),
                ('color', models.CharField(blank=True, max_length=20, null=True, verbose_name='Цвет')),
            ],
            options={
                'verbose_name': 'Статус заявки',
                'verbose_name_plural': 'Статус заявки',
                'ordering': ['-id'],
            },
        ),
    ]
